
// $Id$

/*
   A model of Courier Protocol Software.
   Taken from "Performance Petri Net Analysis of Communications Protocol
   Software by Delay-Equivalent Aggregation" by Woodside and Li, PNPM '91
*/

// Values from the paper

real scale := 5000;  // from the paper

real r1 := scale /  0.57;
real r2 := scale /  4.97;
real r3 := scale /  1.09;
real r4 := scale / 10.37;
real r5 := scale /  4.29;
real r6 := scale /  0.39;
real r7 := scale /  0.68;
real r8 := scale /  2.88;
real r9 := scale /  3.45;
real r10:= scale /  1.25;

// fragmentation ratio, can be changed

real q1 := 1.0;
real q2 := 1.0;

pn courier(int n, int m) := {
  place p1, p2, p3, p4, p5, p6, p8, p9, p10,
        p11, p12, p13, p14, p15, p16, p17,
        p18, p19, p20, p21, p22, p23, p24, p25, p26,
        p27, p28, p29, p30, p31, p32, p33, p34, p35,
        p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46;

  trans t1, t2, t3, t4, t5, t6, 
        t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18,
        t19, t20, t21, t22, t23, t24, t25, t26, t27,
        t28, t29, t30, t31, t32, t33, t34;

  partition(
    p46, p45, p44, p43, p42, p41, p40, 
    p39, p38, p37, p36, p35, p34, p33, p32, p31, p30,
    p29, p28, p27, p26, p25, p24, p23, p22, p21, p20,
    p19, p18, p17, p16, p15, p14, p13, p12, p11, p10,
    p9, p8, p6, p5, p4, p3, p2, p1
  );

  bound(
    p1:1, p2:1, p3:1, p4:1, p5:1, p6:1, p8:1, p9:1,
    p10:1, p11:1, p12:1, p13:m, p14:n, 
    p15:1, p16:1, p17:m, p18:n, p19:n,
    p20:1, p21:1, p22:1, p23:n, p24:n, 
    p25:n, p26:n, p27:1, p28:n, p29:n,
    p30:1, p31:1, p32:1, p33:n, p34:n, 
    p35:1, p36:1, p37:1, p38:1, p39:1,
    p40:1, p41:1, p42:1, p43:1, p44:1, p45:1, p46:1
  );

  init(p1:1, p3:1, p6:1, p10:1, p12:1, p14:n, p17:m,
       p32:1, p37:1, p39:1, p41:1, p44:1, p46:1);

  firing(  
     t1:expo(r7),     t3:expo(r1),     t4:expo(r2),
     t6:expo(r1),     t7:expo(r8),    t10:expo(r5),  
    t11:expo(r5),    t12:expo(r3),    t16:expo(r6),
    t17:expo(r6),    t18:expo(r4),    t19:expo(r3),  
    t20:expo(r4),    t21:expo(r4),    t25:expo(r5),  
    t26:expo(r5),    t28:expo(r9),    t30:expo(r1),  
    t31:expo(r2),    t33:expo(r1),    t34:expo(r10)
  );

  firing(
    t2:0,     
    t5:0,   
    t8:0,
    t9:0,
    t13:0,    
    t14:0,    
    t15:0,    
    t22:0,    
    t23:0,    
    t24:0,
    t27:0,
    t29:0,    
    t32:0
  );

  weight(
     t2:1.0,  t5:1.0,  t8:q1,   t9:q2,  t13:1.0, t14:1.0, t15:1.0,
    t22:1.0, t23:1.0, t24:1.0, t27:1.0, t29:1.0, t32:1.0
  );

  arcs(
    p1:t1, t1:p2,
    p2:t2, p3:t2, t2:p1, t2:p4,
    p4:t3, p6:t3, t3:p3, t3:p5,
    p5:t4, t4:p8,
    p8:t5, p10:t5, t5:p6, t5:p9,
    p9:t6, p12:t6, p17:t6, t6:p10, t6:p11,
    p11:t7, t7:p12, t7:p13,
    p13:t8, p12:t8, p14:t8, t8:p13, t8:p15,
    p13:t9, p12:t9, p14:t9, t9:p16,
    p15:t10, t10:p12, t10:p18,
    p16:t11, t11:p12, t11:p19,
    p20:t12, t12:p12, t12:p14,
    p18:t13, p12:t13, t13:p21,
    p19:t14, p12:t14, t14:p22,
    p23:t15, p12:t15, t15:p20,
    p21:t16, t16:p12, t16:p24,
    p22:t17, t17:p12, t17:p17, t17:p25,
    p26:t18, t18:p23,
    p27:t19, t19:p32, t19:p26,
    p24:t20, t20:p28,
    p25:t21, t21:p29,
    p32:t22, p33:t22, t22:p27,
    p32:t23, p28:t23, t23:p30,
    p32:t24, p29:t24, t24:p31,
    p30:t25, t25:p32, t25:p33,
    p31:t26, t26:p32, t26:p34,
    p32:t27, p34:t27, t27:p33, t27:p35,
    p35:t28, p37:t28, t28:p32, t28:p36,
    p36:t29, p39:t29, t29:p38, t29:p37,
    p38:t30, p41:t30, t30:p40, t30:p39,
    p40:t31, t31:p42,
    p42:t32, p44:t32, t32:p43, t32:p41,
    p43:t33, p46:t33, t33:p45, t33:p44,
    p45:t34, t34:p46
  );

  bigint m1 := num_states;
  bigint m2 := num_arcs;

};

int N := read_int("N");
int M := read_int("M");

# Report + procgen

compute(courier(N, M).m2);
print("There are ", courier(N, M).m1, " states\n");
print("There are ", courier(N, M).m2, " edges\n");

