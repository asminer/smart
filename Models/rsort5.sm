
dtmc sort5 := {
  for (int i in {1..5}, int j in {1..5}, int k in {1..5}, int l in {1..5}, int m in {1..5}) {
    state s[i][j][k][l][m];
    init (s[i][j][k][l][m] : 1);
  }
  for (int i in {1..5}, int j in {1..5}, int k in {1..5}, int l in {1..5}, int m in {1..5}) {
    cond (i>j, 
      arcs(
        s[i][j][k][l][m] : s[j][i][k][l][m] : 1
      ),
      null
    );
    cond (j>k,
      arcs(
        s[i][j][k][l][m] : s[i][k][j][l][m] : 1
      ),
      null
    );
    cond (k>l,
      arcs(
        s[i][j][k][l][m] : s[i][j][l][k][m] : 1
      ),
      null
    );
    cond (l>m,
      arcs(
        s[i][j][k][l][m] : s[i][j][k][m][l] : 1
      ),
      null
    );
  }
  real tta := prob_acc(transient, 0, infinity);

  bigint ns := num_states(false);
  bigint na := num_arcs(false);
};

#Report + mc_solve

print("MC has ", sort5.ns, " states, ", sort5.na, " edges\n");
print("Average #swaps to sort: ", sort5.tta, "\n");
