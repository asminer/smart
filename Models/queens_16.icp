
/*
    16 Queens problem.

    Encoding: each integer variable tells which column to place
    the queen, for the given row.
*/

int r01, r02, r03, r04, r05, r06, r07, r08, 
    r09, r10, r11, r12, r13, r14, r15, r16 in {1..16};

// prevent row attacks: already handled, since we have one queen per row.

// prevent column attacks:

r01 != r02;
r01 != r03;
r01 != r04;
r01 != r05;
r01 != r06;
r01 != r07;
r01 != r08;
r01 != r09;
r01 != r10;
r01 != r11;
r01 != r12;
r01 != r13;
r01 != r14;
r01 != r15;
r01 != r16;

r02 != r03;
r02 != r04;
r02 != r05;
r02 != r06;
r02 != r07;
r02 != r08;
r02 != r09;
r02 != r10;
r02 != r11;
r02 != r12;
r02 != r13;
r02 != r14;
r02 != r15;
r02 != r16;

r03 != r04;
r03 != r05;
r03 != r06;
r03 != r07;
r03 != r08;
r03 != r09;
r03 != r10;
r03 != r11;
r03 != r12;
r03 != r13;
r03 != r14;
r03 != r15;
r03 != r16;

r04 != r05;
r04 != r06;
r04 != r07;
r04 != r08;
r04 != r09;
r04 != r10;
r04 != r11;
r04 != r12;
r04 != r13;
r04 != r14;
r04 != r15;
r04 != r16;

r05 != r06;
r05 != r07;
r05 != r08;
r05 != r09;
r05 != r10;
r05 != r11;
r05 != r12;
r05 != r13;
r05 != r14;
r05 != r15;
r05 != r16;

r06 != r07;
r06 != r08;
r06 != r09;
r06 != r10;
r06 != r11;
r06 != r12;
r06 != r13;
r06 != r14;
r06 != r15;
r06 != r16;

r07 != r08;
r07 != r09;
r07 != r10;
r07 != r11;
r07 != r12;
r07 != r13;
r07 != r14;
r07 != r15;
r07 != r16;

r08 != r09;
r08 != r10;
r08 != r11;
r08 != r12;
r08 != r13;
r08 != r14;
r08 != r15;
r08 != r16;

r09 != r10;
r09 != r11;
r09 != r12;
r09 != r13;
r09 != r14;
r09 != r15;
r09 != r16;

r10 != r11;
r10 != r12;
r10 != r13;
r10 != r14;
r10 != r15;
r10 != r16;

r11 != r12;
r11 != r13;
r11 != r14;
r11 != r15;
r11 != r16;

r12 != r13;
r12 != r14;
r12 != r15;
r12 != r16;

r13 != r14;
r13 != r15;
r13 != r16;

r14 != r15;
r14 != r16;

r15 != r16;

// prevent diagonal-right attacks:

r01 +  1 != r02;
r01 +  2 != r03;
r01 +  3 != r04;
r01 +  4 != r05;
r01 +  5 != r06;
r01 +  6 != r07;
r01 +  7 != r08;
r01 +  8 != r09;
r01 +  9 != r10;
r01 + 10 != r11;
r01 + 11 != r12;
r01 + 12 != r13;
r01 + 13 != r14;
r01 + 14 != r15;
r01 + 15 != r16;

r02 +  1 != r03;
r02 +  2 != r04;
r02 +  3 != r05;
r02 +  4 != r06;
r02 +  5 != r07;
r02 +  6 != r08;
r02 +  7 != r09;
r02 +  8 != r10;
r02 +  9 != r11;
r02 + 10 != r12;
r02 + 11 != r13;
r02 + 12 != r14;
r02 + 13 != r15;
r02 + 14 != r16;

r03 +  1 != r04;
r03 +  2 != r05;
r03 +  3 != r06;
r03 +  4 != r07;
r03 +  5 != r08;
r03 +  6 != r09;
r03 +  7 != r10;
r03 +  8 != r11;
r03 +  9 != r12;
r03 + 10 != r13;
r03 + 11 != r14;
r03 + 12 != r15;
r03 + 13 != r16;

r04 +  1 != r05;
r04 +  2 != r06;
r04 +  3 != r07;
r04 +  4 != r08;
r04 +  5 != r09;
r04 +  6 != r10;
r04 +  7 != r11;
r04 +  8 != r12;
r04 +  9 != r13;
r04 + 10 != r14;
r04 + 11 != r15;
r04 + 12 != r16;

r05 +  1 != r06;
r05 +  2 != r07;
r05 +  3 != r08;
r05 +  4 != r09;
r05 +  5 != r10;
r05 +  6 != r11;
r05 +  7 != r12;
r05 +  8 != r13;
r05 +  9 != r14;
r05 + 10 != r15;
r05 + 11 != r16;

r06 +  1 != r07;
r06 +  2 != r08;
r06 +  3 != r09;
r06 +  4 != r10;
r06 +  5 != r11;
r06 +  6 != r12;
r06 +  7 != r13;
r06 +  8 != r14;
r06 +  9 != r15;
r06 + 10 != r16;

r07 +  1 != r08;
r07 +  2 != r09;
r07 +  3 != r10;
r07 +  4 != r11;
r07 +  5 != r12;
r07 +  6 != r13;
r07 +  7 != r14;
r07 +  8 != r15;
r07 +  9 != r16;

r08 +  1 != r09;
r08 +  2 != r10;
r08 +  3 != r11;
r08 +  4 != r12;
r08 +  5 != r13;
r08 +  6 != r14;
r08 +  7 != r15;
r08 +  8 != r16;

r09 +  1 != r10;
r09 +  2 != r11;
r09 +  3 != r12;
r09 +  4 != r13;
r09 +  5 != r14;
r09 +  6 != r15;
r09 +  7 != r16;

r10 +  1 != r11;
r10 +  2 != r12;
r10 +  3 != r13;
r10 +  4 != r14;
r10 +  5 != r15;
r10 +  6 != r16;

r11 +  1 != r12;
r11 +  2 != r13;
r11 +  3 != r14;
r11 +  4 != r15;
r11 +  5 != r16;

r12 +  1 != r13;
r12 +  2 != r14;
r12 +  3 != r15;
r12 +  4 != r16;

r13 +  1 != r14;
r13 +  2 != r15;
r13 +  3 != r16;

r14 +  1 != r15;
r14 +  2 != r16;

r15 +  1 != r16;

// prevent diagonal-left attacks:

r01 -  1 != r02;
r01 -  2 != r03;
r01 -  3 != r04;
r01 -  4 != r05;
r01 -  5 != r06;
r01 -  6 != r07;
r01 -  7 != r08;
r01 -  8 != r09;
r01 -  9 != r10;
r01 - 10 != r11;
r01 - 11 != r12;
r01 - 12 != r13;
r01 - 13 != r14;
r01 - 14 != r15;
r01 - 15 != r16;

r02 -  1 != r03;
r02 -  2 != r04;
r02 -  3 != r05;
r02 -  4 != r06;
r02 -  5 != r07;
r02 -  6 != r08;
r02 -  7 != r09;
r02 -  8 != r10;
r02 -  9 != r11;
r02 - 10 != r12;
r02 - 11 != r13;
r02 - 12 != r14;
r02 - 13 != r15;
r02 - 14 != r16;

r03 -  1 != r04;
r03 -  2 != r05;
r03 -  3 != r06;
r03 -  4 != r07;
r03 -  5 != r08;
r03 -  6 != r09;
r03 -  7 != r10;
r03 -  8 != r11;
r03 -  9 != r12;
r03 - 10 != r13;
r03 - 11 != r14;
r03 - 12 != r15;
r03 - 13 != r16;

r04 -  1 != r05;
r04 -  2 != r06;
r04 -  3 != r07;
r04 -  4 != r08;
r04 -  5 != r09;
r04 -  6 != r10;
r04 -  7 != r11;
r04 -  8 != r12;
r04 -  9 != r13;
r04 - 10 != r14;
r04 - 11 != r15;
r04 - 12 != r16;

r05 -  1 != r06;
r05 -  2 != r07;
r05 -  3 != r08;
r05 -  4 != r09;
r05 -  5 != r10;
r05 -  6 != r11;
r05 -  7 != r12;
r05 -  8 != r13;
r05 -  9 != r14;
r05 - 10 != r15;
r05 - 11 != r16;

r06 -  1 != r07;
r06 -  2 != r08;
r06 -  3 != r09;
r06 -  4 != r10;
r06 -  5 != r11;
r06 -  6 != r12;
r06 -  7 != r13;
r06 -  8 != r14;
r06 -  9 != r15;
r06 - 10 != r16;

r07 -  1 != r08;
r07 -  2 != r09;
r07 -  3 != r10;
r07 -  4 != r11;
r07 -  5 != r12;
r07 -  6 != r13;
r07 -  7 != r14;
r07 -  8 != r15;
r07 -  9 != r16;

r08 -  1 != r09;
r08 -  2 != r10;
r08 -  3 != r11;
r08 -  4 != r12;
r08 -  5 != r13;
r08 -  6 != r14;
r08 -  7 != r15;
r08 -  8 != r16;

r09 -  1 != r10;
r09 -  2 != r11;
r09 -  3 != r12;
r09 -  4 != r13;
r09 -  5 != r14;
r09 -  6 != r15;
r09 -  7 != r16;

r10 -  1 != r11;
r10 -  2 != r12;
r10 -  3 != r13;
r10 -  4 != r14;
r10 -  5 != r15;
r10 -  6 != r16;

r11 -  1 != r12;
r11 -  2 != r13;
r11 -  3 != r14;
r11 -  4 != r15;
r11 -  5 != r16;

r12 -  1 != r13;
r12 -  2 != r14;
r12 -  3 != r15;
r12 -  4 != r16;

r13 -  1 != r14;
r13 -  2 != r15;
r13 -  3 != r16;

r14 -  1 != r15;
r14 -  2 != r16;

r15 -  1 != r16;

// get solution
satisfiable solve := true;

