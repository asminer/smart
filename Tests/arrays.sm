/* 
   $Id$
*/

/*
 *     Tests stangely shaped arrays
 */

/*
 *   Integer arrays
 */

/*  Normal array */
for (int i in {0..20}) {
  real fact[i] := cond(i<1, 1.0, i*fact[i-1]);
};

/*  Arrays with gaps */
for (int i in {0..6..2}) {
  int gap1[i] := i;
}
for (int i in {6..0..-2}) {
  int gap2[i] := i;
}
print("Testing arrays with gaps; odd indexes should generate range errors\n");
for (int i in {0..6}) {
  print("gap1[", i, "] = ", gap1[i], "\n");
}
for (int i in {0..6}) {
  print("gap2[", i, "] = ", gap2[i], "\n");
}

print("Testing factorial array, everything after index 20 is an error\n");
for (int i in {25..0..-1}) {
  print(i:3, "! = ", fact[i], "\n");
}

/* Check delayed evaluation */
for (int i in {30..0..-1}) {
  int fib[i] := cond(i<2, 1, fib[i-1]+fib[i-2]);
};

print("Testing fibonacci array, valid from 0..30\n");
for (int i in {32..-2..-1}) {
  print(i:3, "th fib:", fib[i], "\n");
}


/*  Checks strange indices  */

for (int i in {1..6, 10..2..-1}) {
  int f[i] := i;
  print("Assign f[",i,"] = ", f[i],"\n"); 
}

/* Multi dimensional Integer arrays */

for (int i in {1..5}, int j in {1..5}, int k in {i..j}) {
  int g1[i][j][k] := k;
  print("Assign g1[",i,"][",j,"][",k,"] = ",g1[i][j][k], "\n"); 
}

print(g1[1][3][2], "\n");
print(g1[5][5][5], "\n");

print("Range error:\n");
print(g1[1][2][3], "\n");


/*
 *    Tests bad array indices and compiler robustness
 */

print("Test of array index order:\n");

for (int i in {0..9}, int j in {1..5}) {
  int g2[j][i] := i+j;

/*       ^^^^^   This should cause an error. */

}

print(g2[2][2], "\n");


/* 
     Real arrays 
 */

/* A simple real array */

for (real x in {0.1,0.2,0.3})
{
  real tr[x] := x;
  print("Assign tr[",x,"] = ", tr[x], "\n"); 
}

/*  Test of array index precision */

for (real x in {0.1}) {
  real g[x] := x;
  print("Assign g[",x,"] = ",g[x],"\n"); 
}

#IndexPrecision 1e-4

print("These should be range errors:\n");
print(g[0.3],"\n");
print(g[0.2],"\n");
print(g[0.15],"\n");
print(g[0.13],"\n");
print(g[0.12],"\n");
print(g[0.11],"\n");
print(g[0.105],"\n");
print(g[0.102],"\n");
print(g[0.101],"\n");
print("These should go to g[0.1]:\n");
print(g[0.1001],"\n");
print(g[0.10001],"\n");
print(g[0.100001],"\n");
print(g[0.1000001],"\n");
print(g[0.10000001],"\n");
print(g[0.100000001],"\n");
print(g[0.1000000001],"\n");
print(g[0.10000000001],"\n");
print(g[0.1],"\n");

/* Another bizarre array */

for (real x in {0.1,0.2}) {
  for (int k in {1..5}, int i in {3}) {
    real xki[x][k][i] := x*k*i ;
    print("Assign xki[",x,"][",k,"][",i,"] = ",xki[x][k][i],"\n"); 
  }
}

/* Yet another strange real array */

for (real x in {0.2..0.8..0.2}, real y in {0.2..0.8..0.2}, real z in {x..y..x*y}) {
  real xyz[x][y][z] := z;
  print("Assign xyz[",x,"][",y,"][",z,"] = ",xyz[x][y][z],"\n"); 
}

/*  These all are leagal */

print(xyz[0.2][0.2][0.2], "\n");
print(xyz[0.2][0.6][0.32], "\n");
print(xyz[0.4][0.8][0.72], "\n");

/* These are not */

print("These should be range errors:\n");

print(xyz[0.6][0.2][0.2], "\n");
print(xyz[0.6][0.7][0.2], "\n");
print(xyz[0.6][0.6][0.8], "\n");

print("Testing number of array indices:\n");

/* Testing wrong number of indices */
for (int i in {1..2}, int j in {10..20}, int k in {100..200}) {
  int wrongind[i][j][k] := i+j+k;
}
wrongind[1][10];
wrongind[1][10][100][3]; 

/* 
   Testing wrong index names and orders
*/

print("Testing wrong index names:\n");

for (int i in {1..10}, int j in {1..10}) {
  int wrongorder[j][i] := i+j;
  int wrongname1[i][k] := i+j;
  int wrongname2[m][n] := i+j;
}

/* 
   Fun stuff
 */

print("\n\nJust for kicks:\n\n");

int TS := 20;

for (int i in {1..TS}, int j in {0..i+1}) {
  int pascal[i][j] := cond(
    j==0 | j>i, 0, cond(
      i==1, 1, pascal[i-1][j-1] + pascal[i-1][j]
    )
  );
}


for (int i in {1..TS}) {
  print(pascal[i][1]:3+(TS-i)*3);
  for (int j in {2..i}) {
    print(pascal[i][j]:6);
  }
  print("\n");
}

