
// $Id$

/*
    A test of lexical ordering for the state space.
    Used only for display purposes.
*/

#PnMarkingStyle VECTOR

// Simple PN, look familiar?

pn molloy(bool mc, int n) := {
  // places, not in the usual order, to test lexical ordering
  place p1, p2, p3, p4, p5;
  init(p3:n);

  trans t1, t2, t3, t4, t5;
  cond(mc, 
    firing(t1 : expo(1.1), 
	   t2 : expo(2.1), 
	   t3 : expo(3.1), 
	   t4 : expo(4.1), 
	   t5 : expo(5.1)
	  ), 
    null
  );

  arcs(
	p3 : t1, t1 : p1, t1 : p4,
	p2 : t2, t2 : p1,
	p1 : t3, t3 : p2,
	p4 : t4, t4 : p5,
	p2 : t5, p5 : t5, t5 : p3
  );

  int ns := num_states(true);
  int na := num_arcs(true);
};

#StateDisplayOrder NATURAL

print("Natural order of states and reachability graph\n",
      sprint(molloy(false, 1).ns, " ", molloy(false, 1).na, "\n")
     );

print("Natural order of states and Markov chain\n",
      sprint(molloy(true, 1).ns, " ", molloy(true, 1).na, "\n")
     );



#StateDisplayOrder LEXICAL

print("Lexical order of states and reachability graph\n",
      sprint(molloy(false, 1).ns, " ", molloy(false, 1).na, "\n")
     );

print("Lexical order of states and Markov chain\n",
      sprint(molloy(true, 1).ns, " ", molloy(true, 1).na, "\n")
     );


