
----------------------------------------------------------------------
Packages required to build:
----------------------------------------------------------------------

* gcc and g++, or other C/C++ compiler with support for C++11

* automake

* autoconfig

* libtool

* flex

* bison


----------------------------------------------------------------------
Packages strongly recommended to build:
----------------------------------------------------------------------

* GMP, for very large integer support.  See https://gmplib.org

* MEDDLY, for decision diagram support.  See http://meddly.sourceforge.net


----------------------------------------------------------------------
Instructions to build
----------------------------------------------------------------------

0.  ./Config-all

    This step is necessary for the first build, and anytime
    configure.ac or any Makefile.am changes.  The script performs
    system-specific configuration.  You can set environment variables
    to change the locations of the libraries, e.g.,

    env MDD_LIBRARY=/alternate/mdd/location/lib MDD_INCLUDE=/alternate/mdd/location/include ./Config-all

    Any arguments passed to these scripts, are in turn passed on to
    the ./configure script.  Useful arguments:

        --without-gmp       Disables GMP support
        --without-meddly    Disables MEDDLY support

    This script will build appropriate makefiles in directories:
        bin-devel/      (for development / debugging executables)
        bin-release/    (for production executables)

      
1.  cd bin-devel   OR   cd bin-release

    You need to run make within the appropriate directory.

2.  make

    This builds everything.  For recent versions of automake,
    you can use:
      make V=0    for silent builds
      make V=1    for noisy builds

3.  make check  OR  make check-old

    Run regression tests.  
    
        make check:       Requires automake version 1.12 or higher.
        make check-old:   Should always work

4.  make bench

    (Optional.)
    Run timing tests.  More important for release code.

5.  make install

    (Optional.)  
    Copies binaries into bin (otherwise they are in src/Apps)

6.  make release
  
    (Very optional.)  
    Creates canonical executable name with version, architecture, and
    OS.  See the "Release" script to help with official releases.


